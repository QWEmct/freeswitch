#!/usr/bin/make -f
# Sample debian/rules that uses debhelper.
# This file is public domain software, originally written by Joey Hess. 

# Uncomment this to turn on verbose mode.
export DH_VERBOSE=1

ifndef AUTOCONF
	AUTOCONFS := $(wildcard /usr/bin/autoconf*)
	AUTOCONF = $(shell which autoconf)
ifneq (,$(findstring 2.50,${AUTOCONFS}))
	AUTOCONF = /usr/bin/autoconf2.50
endif
endif

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

CFLAGS = -ggdb
MOD_CFLAGS = -ggdb

FEATURES = --enable-core-libedit-support --enable-core-odbc-support --with-libcurl --with-openssl

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	FEATURES += --disable-optimization
endif

config.status: configure
	dh_testdir
	cp debian/modules.conf modules.conf
	./configure --host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE) ${FEATURES} --prefix=/usr --sysconfdir=/etc/freeswitch --with-modinstdir=/usr/lib/freeswitch/mod --includedir=/usr/include/freeswitch --with-rundir=/var/run/freeswitch
	# --htdocsdir=/usr/share/doc/freeswitch/html

configure:
	if test ! -f Makefile.in || test ! -x configure ;  then \
	    if test -f ./bootstrap.sh ; then \
		AUTOCONF=${AUTOCONF} ./bootstrap.sh ; \
	    else \
		echo "No Makefile.in and no known way to bootstrap." ; \
		exit 1; \
	    fi; \
	fi;

build: build-stamp
build-stamp:  config.status
	dh_testdir

	$(MAKE)

	touch $@

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp 

	-$(MAKE) update-clean
ifneq "$(wildcard /usr/share/misc/config.sub)" ""
	cp -f /usr/share/misc/config.sub build/config/config.sub
endif
ifneq "$(wildcard /usr/share/misc/config.guess)" ""
	cp -f /usr/share/misc/config.guess build/config/config.guess
endif
	rm -f config.status
	rm -f */*/config.status
	rm -f */*/*/config.status
	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs -A --sourcedir=debian/tmp

	VERBOSE=1 $(MAKE) DESTDIR=$(CURDIR)/debian/tmp install

	# compile and copy by hand perl and python esl bindings
	cd $(CURDIR)/libs/esl/ && make perlmod pymod && cd -

	mkdir -p $(CURDIR)/debian/tmp/usr/lib/python2.6/dist-packages
	cp $(CURDIR)/libs/esl/python/ESL.py $(CURDIR)/debian/tmp/usr/lib/python2.6/dist-packages
	cp $(CURDIR)/libs/esl/python/_ESL.so $(CURDIR)/debian/tmp/usr/lib/python2.6/dist-packages

	mkdir -p $(CURDIR)/debian/tmp/usr/share/perl5/ESL
	cp $(CURDIR)/libs/esl/perl/ESL.so $(CURDIR)/debian/tmp/usr/share/perl5
	cp $(CURDIR)/libs/esl/perl/ESL.pm $(CURDIR)/debian/tmp/usr/share/perl5
	cp $(CURDIR)/libs/esl/perl/ESL/* $(CURDIR)/debian/tmp/usr/share/perl5/ESL/


# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs
	dh_installdocs
	dh_installinit
	cp debian/monit/freeswitch.monitrc debian/freeswitch/etc/monit/freeswitch.monitrc
	dh_install --sourcedir=debian/tmp
	ln -s /var/lib/freeswitch/freeswitch.serial debian/freeswitch/etc/freeswitch
	ln -s /usr/share/freeswitch/sounds debian/freeswitch/etc/freeswitch/sounds
	dh_link
	dh_strip --dbg-package=freeswitch-dbg
	dh_compress
	dh_fixperms --exclude /etc/freeswitch
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install
